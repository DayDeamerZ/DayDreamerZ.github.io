<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>DayDreamerZ的博客</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io</link><description>I'm DayDreamer,不做白日梦</description><copyright>DayDreamerZ的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io</link></image><lastBuildDate>Sun, 16 Feb 2025 14:55:54 +0000</lastBuildDate><managingEditor>DayDreamerZ的博客</managingEditor><ttl>60</ttl><webMaster>DayDreamerZ的博客</webMaster><item><title>LNMP部署网站于云服务器上线全流程实例-www.dongliqingdan.top（该域名已失效）</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/LNMP-bu-shu-wang-zhan-yu-yun-fu-wu-qi-shang-xian-quan-liu-cheng-shi-li--www.dongliqingdan.top%EF%BC%88-gai-yu-ming-yi-shi-xiao-%EF%BC%89.html</link><description># 准备工作
## 1、云服务器：阿里云轻量级服务器
原生配置：（购买服务器时勾选的自带配置）
应用配置：

![Image](https://github.com/user-attachments/assets/6f932dfd-04eb-4b56-ae74-66ef92cb9d8c)

![Image](https://github.com/user-attachments/assets/abe2ec39-5fec-44dc-b59c-0a21188a23eb)

![Image](https://github.com/user-attachments/assets/3560ffe6-3067-4daa-8765-4974d8775688)

系统配置：

![Image](https://github.com/user-attachments/assets/ba351199-6a93-4c9d-b56a-98be604f3131)

## 2、域名
购买域名：
域名DNS解析：
域名备案：

## 3、服务器上线部署软件/平台
目前了解到有：
宝塔面板：操作简便，具有远程连接管理服务器的功能，镜像商店齐全，部署上线多次未果，暂时不推荐
Nginx：是一种轻量级的http服务器，也是反向代理服务器，总之用起来有些复杂，不推荐
tomact: 比较流行的Web 应用服务器, 实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行 ,  一般不作为部署普通html网页使用， 不推荐
httpd：是apache软件包的名字，apache是超文本传输协议的主程序（http协议就是网站，端口默认80），配置文件简单易懂，推荐

# 网页部署上线流程：
## 1、准备好需要部署的文件
对于我们使用的httpd方法来说，每一个html文件需要其对应的css文件与之处于同一级别目录中，js文件、resouse图片集同理如此。</description><guid isPermaLink="true">https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/LNMP-bu-shu-wang-zhan-yu-yun-fu-wu-qi-shang-xian-quan-liu-cheng-shi-li--www.dongliqingdan.top%EF%BC%88-gai-yu-ming-yi-shi-xiao-%EF%BC%89.html</guid><pubDate>Sun, 16 Feb 2025 14:55:29 +0000</pubDate></item><item><title>移动端轮播图(无JS)</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/yi-dong-duan-lun-bo-tu-%28-wu-JS%29.html</link><description>```HTML
&lt;div id='banner-area'&gt;
    &lt;div id='banners-img'&gt;
      &lt;div class='img-area'&gt;
        &lt;img src='./resourse/wei4.jpg' alt='轮播图' /&gt;
      &lt;/div&gt;
      &lt;div class='img-area'&gt;
        &lt;img src='./resourse/wei1.jpg' alt='轮播图' /&gt;
      &lt;/div&gt;
      &lt;div class='img-area'&gt;
        &lt;img src='./resourse/wei2.jpg' alt='轮播图' /&gt;
      &lt;/div&gt;
      &lt;div class='img-area'&gt;
        &lt;img src='./resourse/wei5.jpg' alt='轮播图' /&gt;
      &lt;/div&gt;
      &lt;div class='img-area'&gt;
        &lt;img src='./resourse/wei3.jpg' alt='轮播图' /&gt;
      &lt;/div&gt;
    &lt;/div&gt;
```

```CSS3
#banner-area {
    position: relative;
    width: 100%;
    height: 200px;
    margin-bottom: 0.5rem;
    border-radius: 0.2rem;
    overflow: hidden;
  }
  #banner-area #banners-img {
    width: 500%;
    height: 100%;
  }
  #banner-area #banners-img .img-area {
    float: left;
    width: 20%;
    height: 100%;
    cursor: pointer;
  }
  #banner-area #banners-img .img-area img {
    width: 100%;
    height: 100%;
  }
  #banner-area #banner-nav {
    position: absolute;
    bottom: 0.3rem;
    right: 0.3rem;
    width: 1.5rem;
    height: 0.8rem;
    font-size: 0.3rem;
    line-height: 0.8rem;
    text-align: center;
    color: rgb(255, 255, 255);
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 0.4rem;
  }
```

。</description><guid isPermaLink="true">https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/yi-dong-duan-lun-bo-tu-%28-wu-JS%29.html</guid><pubDate>Sun, 16 Feb 2025 14:44:01 +0000</pubDate></item><item><title>css 超出文本 省略号 行数控制</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/css%20-chao-chu-wen-ben-%20-sheng-lve-hao-%20-xing-shu-kong-zhi.html</link><description>```css3
	    display: -webkit-box;
	    text-overflow:ellipsis; 
	    -webkit-box-orient: vertical;
	    -webkit-line-clamp: 2;     //数字代表行数，自行设置
	    overflow: hidden;
```。</description><guid isPermaLink="true">https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/css%20-chao-chu-wen-ben-%20-sheng-lve-hao-%20-xing-shu-kong-zhi.html</guid><pubDate>Sun, 16 Feb 2025 14:42:39 +0000</pubDate></item><item><title>JS移动端禁止页面左右滑动导致页面跳转</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/JS-yi-dong-duan-jin-zhi-ye-mian-zuo-you-hua-dong-dao-zhi-ye-mian-tiao-zhuan.html</link><description>```javaScript
//禁止左右滑动导致的移动端页面跳转


document.addEventListener('touchmove',function(){
    function fun(e){
        var tar = e.target;
        let target = tar;
    }
    let list = document.getElementsByClassName('list');
    let YXplan = document.getElementsByClassName('YXplan');
    if(target!=list || target==YXplan){
  var startX,startY;
document.addEventListener('touchstart',function(e){
 
    startX = e.targetTouches[0].pageX;
    startY = e.targetTouches[0].pageY;
});
 
document.addEventListener('touchmove',function(e){
 
    var moveX = e.targetTouches[0].pageX;
    var moveY = e.targetTouches[0].pageY;
    
    if(Math.abs(moveX-startX)&gt;Math.abs(moveY-startY)){
        e.preventDefault();
    }
},{passive:false});}
})
```。</description><guid isPermaLink="true">https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/JS-yi-dong-duan-jin-zhi-ye-mian-zuo-you-hua-dong-dao-zhi-ye-mian-tiao-zhuan.html</guid><pubDate>Sun, 16 Feb 2025 14:41:42 +0000</pubDate></item><item><title>php端口扫描工具</title><link>https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/php-duan-kou-sao-miao-gong-ju.html</link><description>
## php端口扫描工具

```php
&lt;?php

//函数区

function isPortOpenTCP($ip, $port, $showMessage = false, $searchSpeed = 1) {
   //isPortOpen($ip, $port, true);  打印每条端口查询信息
   //ipPortOpen($ip, $port, false);  不打印端口查询信息
    $connection = @fsockopen($ip, $port, $errno, $errstr, $searchSpeed);
    if ($connection){
        fclose($connection);
        if ($showMessage) {
            echo '扫描到 $ip 的 $port 端口打开&lt;br&gt;';
        }
        return 1;
    } else {
        if ($showMessage) {
            echo '扫描到 $ip 的 $port 端口关闭&amp;nbsp&amp;nbsp&amp;nbsp连接错误: $errno - $errstr&lt;br&gt;';
        }
        return 0;
    }
}//端口数据返回判断，有数据返回则端口开启，无则是关闭


function isPortOpenUDP($ip, $port, $showMessage = false, $searchSpeed = 1) {
   //isPortOpen($ip, $port, true);  打印每条端口查询信息
   //ipPortOpen($ip, $port, false);  不打印端口查询信息
    $connection = @stream_socket_client('udp://$ip:$port', $errno, $errstr, $searchSpeed, STREAM_CLIENT_CONNECT);
    if ($connection){
        fclose($connection);
        if ($showMessage) {
            echo '扫描到 $ip 的 $port 端口打开&lt;br&gt;';
        }
        return 1;
    } else {
        if ($showMessage) {
            echo '扫描到 $ip 的 $port 端口关闭&lt;br&gt;连接错误: $errno - $errstr&lt;br&gt;';
        }
        return 0;
    }
}//端口数据返回判断，有数据返回则端口开启，无则是关闭

function getOnePort($searchIpA, $portA, $udpORtcp = 'UDP'){
   echo '开始扫描端口 $portA&lt;br&gt;';
   $isPortOpen = ($udpORtcp=='UDP'||$udpORtcp == 'udp')?isPortOpenUDP($searchIpA, $portA, true):isPortOpenTCP($searchIpA, $portA, true);//此处打印结果
   if ($udpORtcp == 'UDP' || $udpORtcp == 'udp'){
      //UDP执行区

   } else if($udpORtcp == 'TCP' || $udpORtcp == 'tcp') {
      //TCP执行区

   } else {
      //0执行区
      echo '未选择UDP或TCP参数';
      exit(-1);
   }
}//获取指定ip地址的 一个 端口开关情况

function getSomePorts($searchIpB, $portSarB, $portEndB, $udpORtcp = 'UDP', $searchSpeed=0.1, $sleepTime = 0){
   //端口扫描，遍历所有端口信息
   echo '开始遍历 $searchIpB 的 $portSarB 到 $portEndB 端口&lt;br&gt;';
   if($portSarB&gt;$portEndB){
      echo '开始端口应小于结束端口！&lt;br&gt;';
      exit(-1);
   }
   $portINF = [];
   if ($udpORtcp == 'UDP' || $udpORtcp == 'udp'){
      //UDP执行区
      echo 'UDP方法扫描&lt;br&gt;';
      for ($curPort = $portSarB; $curPort &lt;= $portEndB; $curPort++) {
         sleep($sleepTime);//扫描间隔时间，单位s //防止被目标主机ban掉，请适当调高该参数
         $isPortOpenUDP = isPortOpenUDP($searchIpB, $curPort, false, $searchSpeed);//此处可以打印单步结果
         $portINF[$curPort-$portSarB][0] = $curPort;
         $portINF[$curPort-$portSarB][1] = $isPortOpenUDP;
      }
   } else if($udpORtcp == 'TCP' || $udpORtcp == 'tcp') {
      //TCP执行区
      echo 'TCP方法扫描&lt;br&gt;';
      for ($curPort = $portSarB; $curPort &lt;= $portEndB; $curPort++) {
         sleep($sleepTime);//扫描间隔时间，单位s //防止被目标主机ban掉，请适当调高该参数
         $isPortOpenTCP = isPortOpenTCP($searchIpB, $curPort, false, $searchSpeed);//此处可以打印单步结果
         $portINF[$curPort-$portSarB][0] = $curPort;
         $portINF[$curPort-$portSarB][1] = $isPortOpenTCP;
      }
   } else {
      //0执行区
      echo '未选择UDP或TCP参数';
      exit(-1);
   }
   outputPortsINFwithSimple($portINF);//此处可简单打印总和结果
}//获取指定ip地址的 多个 端口开关情况，并两列输出，结果存储在函数内部大小为2×n的portINF数组中

function outputPortsINFwithSimple($portINF){
   //输出格式：简单输出表格，直接在html格式显示，简陋减少服务器负担
   for ($i = 0; $i &lt; count($portINF); $i++) {
      for ($j = 0; $j &lt; count($portINF[$i]); $j++) {
         echo $portINF[$i][$j] . '&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;';
      }
      echo '&lt;br&gt;';
   }
}//简单输出portINF数组，适用于低配环境，减小服务器压力


//执行区

getOnePort('219.231.0.101', 443, 'tcp');
getSomePorts('219.231.0.101', 1, 100, 'tcp');

//getOnePort('ip地址', 端口号, '套接字方法', 端口扫描速度&lt;默认0.1s&gt;)
//getSomePort('ip地址', 起始端口号, 结束端口号, '套接字方法', 端口扫描速度&lt;默认0.1s&gt;, 扫描睡眠间隔&lt;默认0s&gt;)   扫描睡眠间隔--用于防止主机屏蔽--调高安全--降低速度
?&gt;
```。</description><guid isPermaLink="true">https://DayDeamerZ.github.io/DayDreamerZ.github.io/post/php-duan-kou-sao-miao-gong-ju.html</guid><pubDate>Sun, 16 Feb 2025 14:12:23 +0000</pubDate></item></channel></rss>